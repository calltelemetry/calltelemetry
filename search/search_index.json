{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Choose a topic to the left","title":"Home"},{"location":"architecture/","text":"Cisco APIs used # CallTelemetry uses realtime feeds to create actionable events from Cisco Callmanager / Communications Manager. Cisco CURRI API provides realtime call event data, and policy control from Cisco CUCM. Cisco XCC API on IOS provides realtime call even data, and policy control from CUBES. Cisco CDR is processed to obtain additional telemetry events, including MCID flags, and missed calls. Security Notes: * CURRI, CUBE, and CDR do not require any CUCM, or IOS credentials to work. * AXL Synchorization requires read-only AXL access to the CUCM API to read User data from CUCM. It's an optional feature, used with Missed Call Alerts. High Level Diagram #","title":"Architecture"},{"location":"architecture/#cisco-apis-used","text":"CallTelemetry uses realtime feeds to create actionable events from Cisco Callmanager / Communications Manager. Cisco CURRI API provides realtime call event data, and policy control from Cisco CUCM. Cisco XCC API on IOS provides realtime call even data, and policy control from CUBES. Cisco CDR is processed to obtain additional telemetry events, including MCID flags, and missed calls. Security Notes: * CURRI, CUBE, and CDR do not require any CUCM, or IOS credentials to work. * AXL Synchorization requires read-only AXL access to the CUCM API to read User data from CUCM. It's an optional feature, used with Missed Call Alerts.","title":"Cisco APIs used"},{"location":"architecture/#high-level-diagram","text":"","title":"High Level Diagram"},{"location":"changelog/","text":"Changelog # 0.4.4 7-15-2021 # CDR Missed Call Alerts - Toggle per user, emails the user of the missed call. Callmanager User Sync - Automatically syncs User data (Name, Email, Extension) with one or more Callmanagers every 15 minutes. Org wide defaults for SMTP, Webex, and Twilio, along with Test options on WebexTeams and SMTP. New UI Framework - CDR Events, MCID, CDR Call History, Policy History, End Users (AXL Sync), and Settings have a nice new user interface - completely rebuilt! 0.4.3 -5-5-2021 # Spam Investgiation Dashboard - Explore short duration calls that your users might not report. Look for trends in recent CDR calls based on duration and frequency to identify spam callers. More to come here. Live CDR Logs - you can now view CDR processing in realtime without going to the console logs. New Marketing Web Page launched in April. Transition from perpetual development builds to license keys. 0.4.2 -3-10-2021 # CUBE Integration - CUBEs are now supported through native Cisco XCC APIs. You can add a CUBE, and link each to any policy. The CUBE page provides the 4-5 lines of CLI to link your CUBEs to Call Telemetry. 0.4.1 -2/28/2021 # Lots of improvements to the HA Clustering from production deployments. RegEx Patterns on Rules - Allowing more complex combinations. Compliance Rules - Org Wide Priority Policies, with dynamic Spam Lookup support, before handing the call to the user policies. New App: TrueSpam Spam Lookup - First Compliance Spam Lookup App - dynamically query Spam APIs to block smarter. Optimization & Caching - 3x Performance! - 100 call inspections per core per second in under 15ms on the OVA. Profiled 700/call inspections/second running the OVA on 8 cores. Need more? See HA Clustering. Webex Teams App supports Markdown More Data Fields available in Apps Enhancements to Live Logging process. Policies now reflect the cause of the action taken. Pricing Page added Minor Bug Fixes UI updates: Admins Page License Page Org Drop Down Selection on sidebar Password Reset Page More detail on Rule Pages - drop down with Apps and Modifiers in the rule. 0.4.1 expires 3-31-2021 without a permenant license. January Updates -1/2021 # HA Clustering available - Load Balancing and full failover - here OVA Builder scripting: OVAs are automatically built fresh from CentOS 8.3 every release. Uploaded new Docker-Compose OVA Uploaded Cluster starter OVA Sizing Guide here Load Testing instructions here 0.4.0 -12/2/2020 # New App: Send Message to Calling Number - for Post Call Surveys New App: Webhooks (migrated from existing Webhook feature) New MCID Page - CDR Status, and MCIDs New Bulk Rule Import/Export - Import/Export multiple rules in bulk New IOS Rule Import / Export - direct from IOS translation rules New CDR Parser: Rebuilt CDR parser for stability. New Organization Feature: - Add multiple team members to an Organization to manage policies. CDR MCID: Prior to 0.4.0 - CDR MCID were added to the \"Default Policy\" only. Now they are stored in a Organization MCIDs Table. Added ability for policies to block on MCIDs, or ignore them. Daily SQL backups on the OVA Breaking Changes: WebHooks are now an App. Kubernetes manifest is not ready for 0.4.0 yet - coming soon. 0.3.9 - 11/5/2020 # New: Apps - Customizable App structure. New: App: Native Webex Teams Alert New: App: Native SMTP Alert New: App: Native SMS Alert New: Added Manual CDR Upload to CDR Reports page New: Added Parser support for CUCM 12.5 CDR. Change: Beta Build Expires 1/31/2021 Breaking Changes: \"Alerts\" are now within Apps. This allows full customization of the Alert in any format - Teams, SMS, SMTP, or whatever comes next. Removed Alerts Tab in Rule Edit. Removed SMTP Settings Page - SMTP Settings are now part of Apps. Previously defined SMTP/Email Alerts will still work this release as transition release - but will not show up in the UI. This feature will be officially removed in 0.4.0. 0.3.8 - 9/24/2020 # New: _Webhooks / Apps _ - Add multiple HTTP triggers to any realtime call event! Apps are coming and will be even smarter. New: OVA Pre-Built Appliance Release UI Updates - Many UI enhancements, more to come. New: Documentation Site - here New: Expire MCID submissions - Configure a day limit for user submissions to automatically expire/delete. New: Policies UI consolidated - history, search, live logs, all from the Policies View. New: Improved Settings Page with Tabs Fixed: SMTP - had some issues found in testing. Fixed: Hit counters. This version is still unlimited and this release expires on 12/31/2020 Fixed: Standardized time entries to UTC. Removed Discord Community Link. Added Webex Teams - you can now join a dedicated room in Cisco Webex Teams - see footer. 0.3.7 - 8/5/2020 # Added Live Logging - Streaming logs of realtime call processing for CURRI_API. Now you can see calls and policy decisions made - in Realtime. Updated CDR Uploads Page - Now you can upload multiple CDR files via drag and drop. CDR will be processed to the Log View, where every field is decoded, and Malicious caller tags are written into your default policy. Added Called Party Translation - reroute callers to any new number using Policies. Added _Calling Party / Calling Name _ - change the caller ID of any call in realtime. Added Event Bus - This is currently more an internal feature, and optimizes realtime responses and lays work for third more exciting integrations. 0.3.6 - 7/20/2020 # Updated, tested and Simplified documentation. Removed Linux option compiled per Distro. If you need linux only and no docker, let me know. Add Email Alerts + SMTP Support. You can now receive an Instant Email Alerts on any Route Point, Translation, or Phone Number - including Emergency Alerts like 911 Patterns. CDR not required, and more than one email address can be added. 0.3.5 - 3/20/2020 # Add Greeting Injection support for Permit and Block Actions. You can now inject greetings without blocking calls - for example to inject a Coronavirus greeting to every call into your cluster. You can use this by typing the exact name of the greeting in Callmanager Announcements into the rule, shown below. Add Permit action - you can now have policies that do not block. Add default action - calling and called numbers can be blank to match all calls in a policy. 0.3.4 - 3/15/2020 # \"Call Actions/Triggers\" are coming soon, but every feature includes the UI complexity. I focused on this release to be simpler to use, easier to deploy, and better tested. Web Pages & How-to Videos: Video training on deployment and onboarding Elixir/Phoenix: Updates to latest versions, including minor refactoring to comply with library changes. UI: Intense effort to simplify, and build easier to understand User Interface. Quick Add of numbers for manual entry {:height=\"50%\" width=\"50%\"} Policy Keepalive - shows multiple Health status for each Policy's Keepalive to Callmanager. It also detects failure, and shows the last time seen. {:height=\"30%\" width=\"30%\"} Call Logs - View Live CURRI API Calls. Quick Block / Permit Toggle Policy result history tracking {:height=\"50%\" width=\"50%\"} Moved version to Navbar, simplified Navbar CDR UI cleaned up Deployment: Improved Documentation on Docker Install Added Kubernetes Deployment Model Support: Intensely tested every part of the application. Removed Slack Channel (invite process is messy) Added Discord Channel - easy to join, no invite process. Removed Twitter Handle - I'm not using it yet. 0.3.3 - 2/27/2020 # Enhancements Called party rules. Policies can now be Calling, Called, or Both party matches now. Rules have a calling and called field. Policy type determines what is used. UX Enhancements Time limits removed, no expiration date. 0.3.2 - 12/10/2019 # New Features SIP Service - Point a route pattern at a Callmanager SIP Trunk towards the IP of the CallTelemetry host (on-premise), and you can now transfer calls to add them to the call block list. UX Enhancements Bug Fixes Call Pagination issues 0.3.1 - 12/4/2019 # New Features Introducing the Industry First CDR to CURRI Integration, allowing automatic incoming call blocking! SFTP Server - To accept CDR uploads from Callmanager. Tightly integrated so that the login is exactly the same as the Web Interface of your server. CDR Parser - Full support of all CDR(Call Detail Record) fields from Cisco UCM viewable in the web UI. We support 11.x and 12.x. If you have errors send an example of your failed CDR file to me, I can easily add more parsers. MCID Automatic Blocking - Detection of Malicious Caller-ID (MCID) flag and automatically blacklisting the caller without any interaction beyond the user pressing the MCID softkey. 0.2.9 - 11/1/2019 # First Public Release for On-Prem. 0.2.9 expires Feb 1 2020. New Features Cisco Incoming Call Blocking - You can apply a call block policy to any Route Pattern, Translation, or Directory Number. You can spread that to multiple CUCM Clusters to have complete call blocking globally. Call Logging - All calls from devices using the policy are available in the CURRI Call log. 0.2.0 - 9/1/2019 # Cloud only. Proof of concept available for public demo.","title":"Change Log"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#044-7-15-2021","text":"CDR Missed Call Alerts - Toggle per user, emails the user of the missed call. Callmanager User Sync - Automatically syncs User data (Name, Email, Extension) with one or more Callmanagers every 15 minutes. Org wide defaults for SMTP, Webex, and Twilio, along with Test options on WebexTeams and SMTP. New UI Framework - CDR Events, MCID, CDR Call History, Policy History, End Users (AXL Sync), and Settings have a nice new user interface - completely rebuilt!","title":"0.4.4 7-15-2021"},{"location":"changelog/#043-5-5-2021","text":"Spam Investgiation Dashboard - Explore short duration calls that your users might not report. Look for trends in recent CDR calls based on duration and frequency to identify spam callers. More to come here. Live CDR Logs - you can now view CDR processing in realtime without going to the console logs. New Marketing Web Page launched in April. Transition from perpetual development builds to license keys.","title":"0.4.3 -5-5-2021"},{"location":"changelog/#042-3-10-2021","text":"CUBE Integration - CUBEs are now supported through native Cisco XCC APIs. You can add a CUBE, and link each to any policy. The CUBE page provides the 4-5 lines of CLI to link your CUBEs to Call Telemetry.","title":"0.4.2 -3-10-2021"},{"location":"changelog/#041-2282021","text":"Lots of improvements to the HA Clustering from production deployments. RegEx Patterns on Rules - Allowing more complex combinations. Compliance Rules - Org Wide Priority Policies, with dynamic Spam Lookup support, before handing the call to the user policies. New App: TrueSpam Spam Lookup - First Compliance Spam Lookup App - dynamically query Spam APIs to block smarter. Optimization & Caching - 3x Performance! - 100 call inspections per core per second in under 15ms on the OVA. Profiled 700/call inspections/second running the OVA on 8 cores. Need more? See HA Clustering. Webex Teams App supports Markdown More Data Fields available in Apps Enhancements to Live Logging process. Policies now reflect the cause of the action taken. Pricing Page added Minor Bug Fixes UI updates: Admins Page License Page Org Drop Down Selection on sidebar Password Reset Page More detail on Rule Pages - drop down with Apps and Modifiers in the rule. 0.4.1 expires 3-31-2021 without a permenant license.","title":"0.4.1 -2/28/2021"},{"location":"changelog/#january-updates-12021","text":"HA Clustering available - Load Balancing and full failover - here OVA Builder scripting: OVAs are automatically built fresh from CentOS 8.3 every release. Uploaded new Docker-Compose OVA Uploaded Cluster starter OVA Sizing Guide here Load Testing instructions here","title":"January Updates -1/2021"},{"location":"changelog/#040-1222020","text":"New App: Send Message to Calling Number - for Post Call Surveys New App: Webhooks (migrated from existing Webhook feature) New MCID Page - CDR Status, and MCIDs New Bulk Rule Import/Export - Import/Export multiple rules in bulk New IOS Rule Import / Export - direct from IOS translation rules New CDR Parser: Rebuilt CDR parser for stability. New Organization Feature: - Add multiple team members to an Organization to manage policies. CDR MCID: Prior to 0.4.0 - CDR MCID were added to the \"Default Policy\" only. Now they are stored in a Organization MCIDs Table. Added ability for policies to block on MCIDs, or ignore them. Daily SQL backups on the OVA Breaking Changes: WebHooks are now an App. Kubernetes manifest is not ready for 0.4.0 yet - coming soon.","title":"0.4.0 -12/2/2020"},{"location":"changelog/#039-1152020","text":"New: Apps - Customizable App structure. New: App: Native Webex Teams Alert New: App: Native SMTP Alert New: App: Native SMS Alert New: Added Manual CDR Upload to CDR Reports page New: Added Parser support for CUCM 12.5 CDR. Change: Beta Build Expires 1/31/2021 Breaking Changes: \"Alerts\" are now within Apps. This allows full customization of the Alert in any format - Teams, SMS, SMTP, or whatever comes next. Removed Alerts Tab in Rule Edit. Removed SMTP Settings Page - SMTP Settings are now part of Apps. Previously defined SMTP/Email Alerts will still work this release as transition release - but will not show up in the UI. This feature will be officially removed in 0.4.0.","title":"0.3.9 - 11/5/2020"},{"location":"changelog/#038-9242020","text":"New: _Webhooks / Apps _ - Add multiple HTTP triggers to any realtime call event! Apps are coming and will be even smarter. New: OVA Pre-Built Appliance Release UI Updates - Many UI enhancements, more to come. New: Documentation Site - here New: Expire MCID submissions - Configure a day limit for user submissions to automatically expire/delete. New: Policies UI consolidated - history, search, live logs, all from the Policies View. New: Improved Settings Page with Tabs Fixed: SMTP - had some issues found in testing. Fixed: Hit counters. This version is still unlimited and this release expires on 12/31/2020 Fixed: Standardized time entries to UTC. Removed Discord Community Link. Added Webex Teams - you can now join a dedicated room in Cisco Webex Teams - see footer.","title":"0.3.8 - 9/24/2020"},{"location":"changelog/#037-852020","text":"Added Live Logging - Streaming logs of realtime call processing for CURRI_API. Now you can see calls and policy decisions made - in Realtime. Updated CDR Uploads Page - Now you can upload multiple CDR files via drag and drop. CDR will be processed to the Log View, where every field is decoded, and Malicious caller tags are written into your default policy. Added Called Party Translation - reroute callers to any new number using Policies. Added _Calling Party / Calling Name _ - change the caller ID of any call in realtime. Added Event Bus - This is currently more an internal feature, and optimizes realtime responses and lays work for third more exciting integrations.","title":"0.3.7 - 8/5/2020"},{"location":"changelog/#036-7202020","text":"Updated, tested and Simplified documentation. Removed Linux option compiled per Distro. If you need linux only and no docker, let me know. Add Email Alerts + SMTP Support. You can now receive an Instant Email Alerts on any Route Point, Translation, or Phone Number - including Emergency Alerts like 911 Patterns. CDR not required, and more than one email address can be added.","title":"0.3.6 - 7/20/2020"},{"location":"changelog/#035-3202020","text":"Add Greeting Injection support for Permit and Block Actions. You can now inject greetings without blocking calls - for example to inject a Coronavirus greeting to every call into your cluster. You can use this by typing the exact name of the greeting in Callmanager Announcements into the rule, shown below. Add Permit action - you can now have policies that do not block. Add default action - calling and called numbers can be blank to match all calls in a policy.","title":"0.3.5 - 3/20/2020"},{"location":"changelog/#034-3152020","text":"\"Call Actions/Triggers\" are coming soon, but every feature includes the UI complexity. I focused on this release to be simpler to use, easier to deploy, and better tested. Web Pages & How-to Videos: Video training on deployment and onboarding Elixir/Phoenix: Updates to latest versions, including minor refactoring to comply with library changes. UI: Intense effort to simplify, and build easier to understand User Interface. Quick Add of numbers for manual entry {:height=\"50%\" width=\"50%\"} Policy Keepalive - shows multiple Health status for each Policy's Keepalive to Callmanager. It also detects failure, and shows the last time seen. {:height=\"30%\" width=\"30%\"} Call Logs - View Live CURRI API Calls. Quick Block / Permit Toggle Policy result history tracking {:height=\"50%\" width=\"50%\"} Moved version to Navbar, simplified Navbar CDR UI cleaned up Deployment: Improved Documentation on Docker Install Added Kubernetes Deployment Model Support: Intensely tested every part of the application. Removed Slack Channel (invite process is messy) Added Discord Channel - easy to join, no invite process. Removed Twitter Handle - I'm not using it yet.","title":"0.3.4 - 3/15/2020"},{"location":"changelog/#033-2272020","text":"Enhancements Called party rules. Policies can now be Calling, Called, or Both party matches now. Rules have a calling and called field. Policy type determines what is used. UX Enhancements Time limits removed, no expiration date.","title":"0.3.3 - 2/27/2020"},{"location":"changelog/#032-12102019","text":"New Features SIP Service - Point a route pattern at a Callmanager SIP Trunk towards the IP of the CallTelemetry host (on-premise), and you can now transfer calls to add them to the call block list. UX Enhancements Bug Fixes Call Pagination issues","title":"0.3.2 - 12/10/2019"},{"location":"changelog/#031-1242019","text":"New Features Introducing the Industry First CDR to CURRI Integration, allowing automatic incoming call blocking! SFTP Server - To accept CDR uploads from Callmanager. Tightly integrated so that the login is exactly the same as the Web Interface of your server. CDR Parser - Full support of all CDR(Call Detail Record) fields from Cisco UCM viewable in the web UI. We support 11.x and 12.x. If you have errors send an example of your failed CDR file to me, I can easily add more parsers. MCID Automatic Blocking - Detection of Malicious Caller-ID (MCID) flag and automatically blacklisting the caller without any interaction beyond the user pressing the MCID softkey.","title":"0.3.1 - 12/4/2019"},{"location":"changelog/#029-1112019","text":"First Public Release for On-Prem. 0.2.9 expires Feb 1 2020. New Features Cisco Incoming Call Blocking - You can apply a call block policy to any Route Pattern, Translation, or Directory Number. You can spread that to multiple CUCM Clusters to have complete call blocking globally. Call Logging - All calls from devices using the policy are available in the CURRI Call log.","title":"0.2.9 - 11/1/2019"},{"location":"changelog/#020-912019","text":"Cloud only. Proof of concept available for public demo.","title":"0.2.0 - 9/1/2019"},{"location":"cloud/","text":"The Cloud Demo Environment is available as a rate-limited sandbox testing. CDR and CUBE policies will work over the cloud CUBE Integration requires direct public access, it cannot be behind a NAT. AXL Sync will not work on the public cloud.","title":"Cloud Demo"},{"location":"apps/smtp/","text":"App List # Send a Message via Webex Teams Bot # Posts a message into a Webex Teams Space. Requires a Bot Token - Obtain your Bot token in the Webex Teams Admin space. Send a Message via Twilio SMS # Sends a message to a list of SMS numbers. Requires Twilio API keys and phone number. Send a Message via SMTP # Sends a message to a list of email addresses via SMTP Requires SMTP credentials for your server. Send a Message via Twilio to Caller # Sends a message back to the caller to engage in a new channel. For example - Post Call Surveying, or engaging with Agents via Chat during vs holding. Requires Twilio API keys and phone number TrueSpam Lookup - # This app does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold configured on the App Settings, the call is blocked.","title":"App List"},{"location":"apps/smtp/#app-list","text":"","title":"App List"},{"location":"apps/smtp/#send-a-message-via-webex-teams-bot","text":"Posts a message into a Webex Teams Space. Requires a Bot Token - Obtain your Bot token in the Webex Teams Admin space.","title":"Send a Message via Webex Teams Bot"},{"location":"apps/smtp/#send-a-message-via-twilio-sms","text":"Sends a message to a list of SMS numbers. Requires Twilio API keys and phone number.","title":"Send a Message via Twilio SMS"},{"location":"apps/smtp/#send-a-message-via-smtp","text":"Sends a message to a list of email addresses via SMTP Requires SMTP credentials for your server.","title":"Send a Message via SMTP"},{"location":"apps/smtp/#send-a-message-via-twilio-to-caller","text":"Sends a message back to the caller to engage in a new channel. For example - Post Call Surveying, or engaging with Agents via Chat during vs holding. Requires Twilio API keys and phone number","title":"Send a Message via Twilio to Caller"},{"location":"apps/smtp/#truespam-lookup-","text":"This app does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold configured on the App Settings, the call is blocked.","title":"TrueSpam Lookup -"},{"location":"apps/webhooks/","text":"App List # Send a Message via Webex Teams Bot # Posts a message into a Webex Teams Space. Requires a Bot Token - Obtain your Bot token in the Webex Teams Admin space. Send a Message via Twilio SMS # Sends a message to a list of SMS numbers. Requires Twilio API keys and phone number. Send a Message via SMTP # Sends a message to a list of email addresses via SMTP Requires SMTP credentials for your server. Send a Message via Twilio to Caller # Sends a message back to the caller to engage in a new channel. For example - Post Call Surveying, or engaging with Agents via Chat during vs holding. Requires Twilio API keys and phone number TrueSpam Lookup # This app does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold configured on the App Settings, the call is blocked.","title":"Catalog"},{"location":"apps/webhooks/#app-list","text":"","title":"App List"},{"location":"apps/webhooks/#send-a-message-via-webex-teams-bot","text":"Posts a message into a Webex Teams Space. Requires a Bot Token - Obtain your Bot token in the Webex Teams Admin space.","title":"Send a Message via Webex Teams Bot"},{"location":"apps/webhooks/#send-a-message-via-twilio-sms","text":"Sends a message to a list of SMS numbers. Requires Twilio API keys and phone number.","title":"Send a Message via Twilio SMS"},{"location":"apps/webhooks/#send-a-message-via-smtp","text":"Sends a message to a list of email addresses via SMTP Requires SMTP credentials for your server.","title":"Send a Message via SMTP"},{"location":"apps/webhooks/#send-a-message-via-twilio-to-caller","text":"Sends a message back to the caller to engage in a new channel. For example - Post Call Surveying, or engaging with Agents via Chat during vs holding. Requires Twilio API keys and phone number","title":"Send a Message via Twilio to Caller"},{"location":"apps/webhooks/#truespam-lookup","text":"This app does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold configured on the App Settings, the call is blocked.","title":"TrueSpam Lookup"},{"location":"deployment/choices/","text":"If you have any questions, please contact jason@calltelemetry.com. Single Node - # Easiset to deploy. Boots up, grabs DHCP, and hit the HTTP login screen. Production ready, it will automatically start up all service on reboot. Make sure to size it correctly to the call volume you expect, by default it only requests 2 vCPU - about 200 calls/second sustained load. Add more cores, and it can scale to 700/calls/second inspected. An example PostgreSQL backup script is included in the folder. OVA Appliance Multi Node HA Cluster # If you need to scale to multiple vCPU VMs for load balancing, or capacity, or failover - choose this. You will get 3 Virtual IPs floating among 3+ nodes, with PostgreSQL replicas on each node. The CrunchyData PostgreSQL operator has a built in backup scheduler you can use for backups. Cluster - Kubernetes","title":"Single OVA or Cluster"},{"location":"deployment/choices/#single-node-","text":"Easiset to deploy. Boots up, grabs DHCP, and hit the HTTP login screen. Production ready, it will automatically start up all service on reboot. Make sure to size it correctly to the call volume you expect, by default it only requests 2 vCPU - about 200 calls/second sustained load. Add more cores, and it can scale to 700/calls/second inspected. An example PostgreSQL backup script is included in the folder. OVA Appliance","title":"Single Node -"},{"location":"deployment/choices/#multi-node-ha-cluster","text":"If you need to scale to multiple vCPU VMs for load balancing, or capacity, or failover - choose this. You will get 3 Virtual IPs floating among 3+ nodes, with PostgreSQL replicas on each node. The CrunchyData PostgreSQL operator has a built in backup scheduler you can use for backups. Cluster - Kubernetes","title":"Multi Node HA Cluster"},{"location":"deployment/docker/","text":"Docker # Recommend: Ubuntu 18.0.4 2 Minutes to both install Docker, and create an account! Once docker boots, visit http://localhost, Sign up with any login you like. Linux only: Change port 22 for CDR SFTP Since we run our own SFTP server, so we need to change Linux's SSH port from 22 to 2222 (or any other port than 22). echo \"Port 2222\" >> /etc/ssh/sshd_config systemctl restart sshd.service You will have to SSH to Linux on 2222 now, instead of 22. Grab the Docker Compose file and Launch the containers! # sudo snap install docker sudo apt-get install docker-compose mkdir calltelemetry wget https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/docker-compose.yml cd calltelemetry sudo docker-compose up","title":"Docker"},{"location":"deployment/docker/#docker","text":"Recommend: Ubuntu 18.0.4 2 Minutes to both install Docker, and create an account! Once docker boots, visit http://localhost, Sign up with any login you like. Linux only: Change port 22 for CDR SFTP Since we run our own SFTP server, so we need to change Linux's SSH port from 22 to 2222 (or any other port than 22). echo \"Port 2222\" >> /etc/ssh/sshd_config systemctl restart sshd.service You will have to SSH to Linux on 2222 now, instead of 22.","title":"Docker"},{"location":"deployment/docker/#grab-the-docker-compose-file-and-launch-the-containers","text":"sudo snap install docker sudo apt-get install docker-compose mkdir calltelemetry wget https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/docker-compose.yml cd calltelemetry sudo docker-compose up","title":"Grab the Docker Compose file and Launch the containers!"},{"location":"deployment/k3s/","text":"Enterprise HA Cluster Guide # Professional Installation support is available for clustered installs. # This area is new and under development, this is intended to be a guide, but not self installed. Please contact me if you think this deployment fits your need. Once you have 3 machines ready, the entire cluster install can be done in under 30 minutes. Architecture # Deploy 3 CentOS Servers # I am using CentOS 8.2. Configure your own DNS, Static IPs, etc. On ALL Nodes - Bootstrap script # CentOS only Run this script to install kubectl, helm, and k9s, git and disable firewall. curl https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/ha-scripts/centos_prep.sh | sh Install First K3s Master Node # cd calltelemetry/ha-scripts # Edit your master.sh file with your own variables. Just a couple IPs and passwords. See comments inside the file. ./master.sh Install K3s Masters 2 and 3 # # On secondary nodes: cd calltelemetry/ha-scripts # Edit the secondary.sh file - change the IP to be your master ./secondary.sh Check the health of the nodes before continuing - all should say running. calltelemetry@hp-k3s-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION ct-node-1 Ready control-plane,etcd,master 4m36s v1.20.0+k3s2 ct-node-2 Ready control-plane,etcd,master 40s v1.20.0+k3s2 ct-node-3 Ready control-plane,etcd,master 19s v1.20.0+k3s2 calltelemetry@hp-k3s-1:~$ Run Post-Install Script # Scales up a couple resources to fill out your 3 node cluster. (Run this on Node 1) kubectl port-forward -n pgo svc/postgres-operator 8443:8443 & curl https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/ha-scripts/post_install.sh | sh Wait a moment and check your SQL cluster pgo test ctsql cluster : ctsql Services primary (10.43.222.74:5432): UP replica (10.43.246.172:5432): UP Instances primary (ctsql-6895cd4bb-2f524): UP replica (ctsql-iulc-75ccc767c7-wwd2k): UP replica (ctsql-yzgz-8689bb9998-c2mlf): UP Check the deployment - you should see 3 CallTelemetry-web servers running. kubectl get pods NAME READY STATUS RESTARTS AGE calltelemetry-web-fqlv5 1/1 Running 0 4m21s calltelemetry-web-gp2f9 1/1 Running 0 4m21s calltelemetry-web-zbkk6 1/1 Running 0 4m21s svclb-traefik-4ngn8 2/2 Running 0 16m svclb-traefik-6pmjw 2/2 Running 0 16m svclb-traefik-chqsw 2/2 Running 0 16m traefik-99bfb8458-8xdvj 1/1 Running 0 16m Check your IPs assigned, you should see your IPs listed here kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE calltelemetry-primary LoadBalancer 10.43.195.226 192.168.123.135 80:30609/TCP,22:32207/TCP 13m calltelemetry-secondary LoadBalancer 10.43.122.52 192.168.123.136 80:32049/TCP,22:32124/TCP 13m kubernetes ClusterIP 10.43.0.1 <none> 443/TCP 2d18h traefik LoadBalancer 10.43.171.164 192.168.123.139 80:31050/TCP,443:30731/TCP 22h Setup DNS records to point to your 2 VIP IP Addresses for load balancing- primary and secondary. Open a web browser to http://admin_cluster_IP and create an account. Use these 2 VIP ecords for the CURRI API and CDR, and the cluster admin for management. Appendix / Troubleshooting # If you need to find your SQL Password # In our case, the password for postgres user is calltelemetry /snap/bin/kubectl port-forward -n pgo svc/postgres-operator 8443 :8443 & pgo show user -n pgo ctsql --show-system-accounts CLUSTER USERNAME PASSWORD EXPIRES STATUS ERROR ------- ----------- ------------------------ ------- ------ ----- ctsql crunchyadm never ok ctsql postgres calltelemetry never ok ctsql primaryuser random_pass never ok ctsql testuser random_pass never ok SQL - Crunchy Data PostgreSQL Operator # Cruncy Data PostgreSQL Operator Github Crunch Data PostgreSQL Operator Docs Cruncy Data PostgreSQL Quickstart","title":"HA Cluster"},{"location":"deployment/k3s/#enterprise-ha-cluster-guide","text":"","title":"Enterprise HA Cluster Guide"},{"location":"deployment/k3s/#professional-installation-support-is-available-for-clustered-installs","text":"This area is new and under development, this is intended to be a guide, but not self installed. Please contact me if you think this deployment fits your need. Once you have 3 machines ready, the entire cluster install can be done in under 30 minutes.","title":"Professional Installation support is available for clustered installs."},{"location":"deployment/k3s/#architecture","text":"","title":"Architecture"},{"location":"deployment/k3s/#deploy-3-centos-servers","text":"I am using CentOS 8.2. Configure your own DNS, Static IPs, etc.","title":"Deploy 3 CentOS Servers"},{"location":"deployment/k3s/#on-all-nodes-bootstrap-script","text":"CentOS only Run this script to install kubectl, helm, and k9s, git and disable firewall. curl https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/ha-scripts/centos_prep.sh | sh","title":"On ALL Nodes - Bootstrap script"},{"location":"deployment/k3s/#install-first-k3s-master-node","text":"cd calltelemetry/ha-scripts # Edit your master.sh file with your own variables. Just a couple IPs and passwords. See comments inside the file. ./master.sh","title":"Install First K3s Master Node"},{"location":"deployment/k3s/#install-k3s-masters-2-and-3","text":"# On secondary nodes: cd calltelemetry/ha-scripts # Edit the secondary.sh file - change the IP to be your master ./secondary.sh Check the health of the nodes before continuing - all should say running. calltelemetry@hp-k3s-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION ct-node-1 Ready control-plane,etcd,master 4m36s v1.20.0+k3s2 ct-node-2 Ready control-plane,etcd,master 40s v1.20.0+k3s2 ct-node-3 Ready control-plane,etcd,master 19s v1.20.0+k3s2 calltelemetry@hp-k3s-1:~$","title":"Install K3s Masters 2 and 3"},{"location":"deployment/k3s/#run-post-install-script","text":"Scales up a couple resources to fill out your 3 node cluster. (Run this on Node 1) kubectl port-forward -n pgo svc/postgres-operator 8443:8443 & curl https://raw.githubusercontent.com/calltelemetry/calltelemetry/master/ha-scripts/post_install.sh | sh Wait a moment and check your SQL cluster pgo test ctsql cluster : ctsql Services primary (10.43.222.74:5432): UP replica (10.43.246.172:5432): UP Instances primary (ctsql-6895cd4bb-2f524): UP replica (ctsql-iulc-75ccc767c7-wwd2k): UP replica (ctsql-yzgz-8689bb9998-c2mlf): UP Check the deployment - you should see 3 CallTelemetry-web servers running. kubectl get pods NAME READY STATUS RESTARTS AGE calltelemetry-web-fqlv5 1/1 Running 0 4m21s calltelemetry-web-gp2f9 1/1 Running 0 4m21s calltelemetry-web-zbkk6 1/1 Running 0 4m21s svclb-traefik-4ngn8 2/2 Running 0 16m svclb-traefik-6pmjw 2/2 Running 0 16m svclb-traefik-chqsw 2/2 Running 0 16m traefik-99bfb8458-8xdvj 1/1 Running 0 16m Check your IPs assigned, you should see your IPs listed here kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE calltelemetry-primary LoadBalancer 10.43.195.226 192.168.123.135 80:30609/TCP,22:32207/TCP 13m calltelemetry-secondary LoadBalancer 10.43.122.52 192.168.123.136 80:32049/TCP,22:32124/TCP 13m kubernetes ClusterIP 10.43.0.1 <none> 443/TCP 2d18h traefik LoadBalancer 10.43.171.164 192.168.123.139 80:31050/TCP,443:30731/TCP 22h Setup DNS records to point to your 2 VIP IP Addresses for load balancing- primary and secondary. Open a web browser to http://admin_cluster_IP and create an account. Use these 2 VIP ecords for the CURRI API and CDR, and the cluster admin for management.","title":"Run Post-Install Script"},{"location":"deployment/k3s/#appendix-troubleshooting","text":"","title":"Appendix / Troubleshooting"},{"location":"deployment/k3s/#if-you-need-to-find-your-sql-password","text":"In our case, the password for postgres user is calltelemetry /snap/bin/kubectl port-forward -n pgo svc/postgres-operator 8443 :8443 & pgo show user -n pgo ctsql --show-system-accounts CLUSTER USERNAME PASSWORD EXPIRES STATUS ERROR ------- ----------- ------------------------ ------- ------ ----- ctsql crunchyadm never ok ctsql postgres calltelemetry never ok ctsql primaryuser random_pass never ok ctsql testuser random_pass never ok","title":"If you need to find your SQL Password"},{"location":"deployment/k3s/#sql-crunchy-data-postgresql-operator","text":"Cruncy Data PostgreSQL Operator Github Crunch Data PostgreSQL Operator Docs Cruncy Data PostgreSQL Quickstart","title":"SQL - Crunchy Data PostgreSQL Operator"},{"location":"deployment/k8s/","text":"Kubernetes Charts # You can be Production Ready - 5 minutes Just 5 minutes from Bare Ubuntu 18.0.4 VM to install a full Kubernetes Cluster + CallTelemetry and get to the login screen. Run the script # Change your IP range sudo snap install microk8s --classic --channel = 1 .18/stable sudo microk8s.enable dns storage helm3 metallb:192.168.123.170-192.168.123.171 sudo microk8s.helm3 repo add calltelemetry https://calltelemetry.github.io/calltelemetry/ sudo microk8s.helm3 repo update sudo microk8s.kubectl create namespace calltelemetry sudo microk8s.helm3 install calltelemetry --namespace = calltelemetry calltelemetry/stable Check that everything is online # demo@demo-VirtualBox:~$ sudo microk8s.kubectl get pod -n calltelemetry NAME READY STATUS RESTARTS AGE calltelemetry-7dbcc5784f-vz5vv 1/1 Running 0 12m","title":"K8s"},{"location":"deployment/k8s/#kubernetes-charts","text":"You can be Production Ready - 5 minutes Just 5 minutes from Bare Ubuntu 18.0.4 VM to install a full Kubernetes Cluster + CallTelemetry and get to the login screen.","title":"Kubernetes Charts"},{"location":"deployment/k8s/#run-the-script","text":"Change your IP range sudo snap install microk8s --classic --channel = 1 .18/stable sudo microk8s.enable dns storage helm3 metallb:192.168.123.170-192.168.123.171 sudo microk8s.helm3 repo add calltelemetry https://calltelemetry.github.io/calltelemetry/ sudo microk8s.helm3 repo update sudo microk8s.kubectl create namespace calltelemetry sudo microk8s.helm3 install calltelemetry --namespace = calltelemetry calltelemetry/stable","title":"Run the script"},{"location":"deployment/k8s/#check-that-everything-is-online","text":"demo@demo-VirtualBox:~$ sudo microk8s.kubectl get pod -n calltelemetry NAME READY STATUS RESTARTS AGE calltelemetry-7dbcc5784f-vz5vv 1/1 Running 0 12m","title":"Check that everything is online"},{"location":"deployment/load-testing/","text":"You can easily load test your own installation. # Get the curri test request file. this is the same data CUCM submits to the API. wget https://raw.githubusercontent.com/calltelemetry/calltelemetry/docs/tests/curri.xml Install Ali Testing per your OS here Now get your CallTelemetry policy URL from the Web Portal, replace it here, and change --rps to increase the numer of requests per second. Hit Enter to run the test. ali -w=1 -r 100 -d=0 http://192.168.123.135/curri/policy\\?api_key\\=089131c3-6de2-4cc2-ae97-cd20975cd09e --method=POST --body-file curri.xml","title":"Load testing"},{"location":"deployment/load-testing/#you-can-easily-load-test-your-own-installation","text":"Get the curri test request file. this is the same data CUCM submits to the API. wget https://raw.githubusercontent.com/calltelemetry/calltelemetry/docs/tests/curri.xml Install Ali Testing per your OS here Now get your CallTelemetry policy URL from the Web Portal, replace it here, and change --rps to increase the numer of requests per second. Hit Enter to run the test. ali -w=1 -r 100 -d=0 http://192.168.123.135/curri/policy\\?api_key\\=089131c3-6de2-4cc2-ae97-cd20975cd09e --method=POST --body-file curri.xml","title":"You can easily load test your own installation."},{"location":"deployment/ova/","text":"Download Links # OVAs are approximately 1GB # Download Latest Release Download the OVA and import to Vmware. The default import template of 2 vCPUS will process 200 new call inspections/second. Need more? Allocate 8 cores to hit 700/calls/second. More than that? See the Enterprise Plan for HA Clustering. Requirements: 2 vCPU 4GB RAM 60GB Disk Space OS Details CentOS 8.3 IP: DHCP Username: calltelemetry Password: calltelemetry First Boot / Login to the Web GUI # It will bootup and grab a DHCP address, and display that on the console. Just open a web browser to http://IPADDRESS and create a new login(signup). If you don't see a Web Page, try visitng the Troubleshooting Page . Each user is assigned their own private Organizaiton by default. No data is shared between users unless the user is invited to the Organization. Visit the Organization Page to learn more. Static IP # Changing the IP is standard CentOS 8.0 processes. I've used the \"nmtui\" CLI utility in my lab testing to assign static IPs. Change the OS Password # Good practice, change the OS password for calltelemetry - it's just one command. passwd","title":"OVA Appliance"},{"location":"deployment/ova/#download-links","text":"","title":"Download Links"},{"location":"deployment/ova/#ovas-are-approximately-1gb","text":"Download Latest Release Download the OVA and import to Vmware. The default import template of 2 vCPUS will process 200 new call inspections/second. Need more? Allocate 8 cores to hit 700/calls/second. More than that? See the Enterprise Plan for HA Clustering. Requirements: 2 vCPU 4GB RAM 60GB Disk Space OS Details CentOS 8.3 IP: DHCP Username: calltelemetry Password: calltelemetry","title":"OVAs are approximately 1GB"},{"location":"deployment/ova/#first-boot-login-to-the-web-gui","text":"It will bootup and grab a DHCP address, and display that on the console. Just open a web browser to http://IPADDRESS and create a new login(signup). If you don't see a Web Page, try visitng the Troubleshooting Page . Each user is assigned their own private Organizaiton by default. No data is shared between users unless the user is invited to the Organization. Visit the Organization Page to learn more.","title":"First Boot / Login to the Web GUI"},{"location":"deployment/ova/#static-ip","text":"Changing the IP is standard CentOS 8.0 processes. I've used the \"nmtui\" CLI utility in my lab testing to assign static IPs.","title":"Static IP"},{"location":"deployment/ova/#change-the-os-password","text":"Good practice, change the OS password for calltelemetry - it's just one command. passwd","title":"Change the OS Password"},{"location":"deployment/sizing/","text":"Sizing Guide # 100 new call inspections per core per second while under 15ms. # The OVA is 2 vCPU, and hits 200-300 new calls insepctions per second in under 15ms, constant load, 95th percentile. Scale the OVA to 8 vCPU and get 600+ call inspections per second in under 15ms. If you need to inspect more than 600 calls per second on a single box, let's talk - email me jason@calltelemetry. This is new events per second sustained stress testing, not concurrent calls active in the system. If you have call requests spikes above this rate, they can be easily handled momentarily. In the event the system is overloaded, connections will be returned error with HTTP code 500, and calls will continue according to the ECCP profile setting default. If you need failover or scaling beyond a single node, take a look at the Enterprise HA option Kubernetes","title":"Sizing"},{"location":"deployment/sizing/#sizing-guide","text":"","title":"Sizing Guide"},{"location":"deployment/sizing/#100-new-call-inspections-per-core-per-second-while-under-15ms","text":"The OVA is 2 vCPU, and hits 200-300 new calls insepctions per second in under 15ms, constant load, 95th percentile. Scale the OVA to 8 vCPU and get 600+ call inspections per second in under 15ms. If you need to inspect more than 600 calls per second on a single box, let's talk - email me jason@calltelemetry. This is new events per second sustained stress testing, not concurrent calls active in the system. If you have call requests spikes above this rate, they can be easily handled momentarily. In the event the system is overloaded, connections will be returned error with HTTP code 500, and calls will continue according to the ECCP profile setting default. If you need failover or scaling beyond a single node, take a look at the Enterprise HA option Kubernetes","title":"100 new call inspections per core per second while under 15ms."},{"location":"features/apps/","text":"Apps # Latest App Catalog Apps are a modular services that can trigger on any rule event, and even change the callflow. What can apps do? # Alerts # You can trigger actions, sometimes we woudl call these \"alerts\" via Webex Teams, Email, Twilio, and more. Modifying call flow # Some apps change the callflow. For example, a new app TrueSpam does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold, the call is blocked.","title":"Apps"},{"location":"features/apps/#apps","text":"Latest App Catalog Apps are a modular services that can trigger on any rule event, and even change the callflow.","title":"Apps"},{"location":"features/apps/#what-can-apps-do","text":"","title":"What can apps do?"},{"location":"features/apps/#alerts","text":"You can trigger actions, sometimes we woudl call these \"alerts\" via Webex Teams, Email, Twilio, and more.","title":"Alerts"},{"location":"features/apps/#modifying-call-flow","text":"Some apps change the callflow. For example, a new app TrueSpam does a lookup to Twilio, and evalulates if the caller has a known spam score. If the score is higher than your threshold, the call is blocked.","title":"Modifying call flow"},{"location":"features/axl-sync/","text":"AXL Sync # You can add 1, or more Callmanagers to pull in Directory information from. # Requires a user with read-only API AXL Access or higher. Data Synchronizes every 15 minutes, you can also manually sync. Add CUCM Directory # Add a Directory by filling out the form below under CUCM Directories -> Add. Press the Sync button to manually initialize a synchronization. The page will return Success or failure, with the number of users found. Check End User Directories # Check if the User Directory is populated.","title":"Setup AXL User Sync"},{"location":"features/axl-sync/#axl-sync","text":"","title":"AXL Sync"},{"location":"features/axl-sync/#you-can-add-1-or-more-callmanagers-to-pull-in-directory-information-from","text":"Requires a user with read-only API AXL Access or higher. Data Synchronizes every 15 minutes, you can also manually sync.","title":"You can add 1, or more Callmanagers to pull in Directory information from."},{"location":"features/axl-sync/#add-cucm-directory","text":"Add a Directory by filling out the form below under CUCM Directories -> Add. Press the Sync button to manually initialize a synchronization. The page will return Success or failure, with the number of users found.","title":"Add CUCM Directory"},{"location":"features/axl-sync/#check-end-user-directories","text":"Check if the User Directory is populated.","title":"Check End User Directories"},{"location":"features/enable_missed_call_alerts/","text":"Enable Missed Call Alerts # Requirements # Enable CDR in Callmanager Service Parameters Enable Zero Duration Calls in Service Parameters Setup CDR Account to push to Call Telemetry SFP Add AXL Directory, synch must suceed Setup Org Level SMTP Parameters, send test email from that page to verify Missed Calls are triggered on Original Called Party, redirects or forwards will not trigger calls Enable Missed Calls per user # Simply toggle the switch to be highlighted, and the user will receive missed call alert emails.","title":"Enable Missed Call on Users"},{"location":"features/enable_missed_call_alerts/#enable-missed-call-alerts","text":"","title":"Enable Missed Call Alerts"},{"location":"features/enable_missed_call_alerts/#requirements","text":"Enable CDR in Callmanager Service Parameters Enable Zero Duration Calls in Service Parameters Setup CDR Account to push to Call Telemetry SFP Add AXL Directory, synch must suceed Setup Org Level SMTP Parameters, send test email from that page to verify Missed Calls are triggered on Original Called Party, redirects or forwards will not trigger calls","title":"Requirements"},{"location":"features/enable_missed_call_alerts/#enable-missed-calls-per-user","text":"Simply toggle the switch to be highlighted, and the user will receive missed call alert emails.","title":"Enable Missed Calls per user"},{"location":"features/mcid/","text":"MCID Blocking # Background # MCID - Malicious Caller ID Tag - was released in Callmanager 4.0.1, in 2004. It's a softkey on the phone built into Callmanager. When the user is on a call, they can press \"MCID\", this will flag the call in CDR records. CallTelemetry Server will process CDR and look for the flag, and add it to the Call Policy API. Scope of MCID Blocking # MCIDs are by default applied in 2 ways - User Submissions, and Admin Imports. Each policy has an option to process MCID protection or not - click the edit button on the policy. User Submissions of MCIDs # Users can only block their own lines. MCID submissions only apply to the phone that submitted them. User Submissions are Calling + Called number combinations, and applied for that exact combination. This means - your users cannot submit wide impacting rules - only the rules that apply to their phone. Admin MCIDs # Administrators can also import MCIDs in bulk. You can import CSV format, or IOS reject rules CLI. Expirations # MCIDs do not expire by default, but can be set under Organization Settings. Admin MCID blocks never expire. You can set the expiration of MCIDs to allow for them to be purged over time. Deleting MCIDs # MCIDs are listed under MCID Submissions, and you can delete any entry, and see it's expiration schedule if set. 0 days means never expire.","title":"MCID Blocking"},{"location":"features/mcid/#mcid-blocking","text":"","title":"MCID Blocking"},{"location":"features/mcid/#background","text":"MCID - Malicious Caller ID Tag - was released in Callmanager 4.0.1, in 2004. It's a softkey on the phone built into Callmanager. When the user is on a call, they can press \"MCID\", this will flag the call in CDR records. CallTelemetry Server will process CDR and look for the flag, and add it to the Call Policy API.","title":"Background"},{"location":"features/mcid/#scope-of-mcid-blocking","text":"MCIDs are by default applied in 2 ways - User Submissions, and Admin Imports. Each policy has an option to process MCID protection or not - click the edit button on the policy.","title":"Scope of MCID Blocking"},{"location":"features/mcid/#user-submissions-of-mcids","text":"Users can only block their own lines. MCID submissions only apply to the phone that submitted them. User Submissions are Calling + Called number combinations, and applied for that exact combination. This means - your users cannot submit wide impacting rules - only the rules that apply to their phone.","title":"User Submissions of MCIDs"},{"location":"features/mcid/#admin-mcids","text":"Administrators can also import MCIDs in bulk. You can import CSV format, or IOS reject rules CLI.","title":"Admin MCIDs"},{"location":"features/mcid/#expirations","text":"MCIDs do not expire by default, but can be set under Organization Settings. Admin MCID blocks never expire. You can set the expiration of MCIDs to allow for them to be purged over time.","title":"Expirations"},{"location":"features/mcid/#deleting-mcids","text":"MCIDs are listed under MCID Submissions, and you can delete any entry, and see it's expiration schedule if set. 0 days means never expire.","title":"Deleting MCIDs"},{"location":"features/organizations/","text":"Organizations / Teams # Each user on creation is assigned their own unique Organization as their email address. Add Users # This page creates an new admin user with a password. You can add team members to your Organization via the Organization -> Add Admins page. Delete Users # This will delete the user's account. Remove members by clicking the X on the user. Permissions # Users are created on this page with \"Admin\" rights to your organization. Today the server allows \"anyone\" to sign up. If a user joins the server web page, they will not gain any access to Organization policies or reports. I will add user roles in a later version.","title":"Organizations"},{"location":"features/organizations/#organizations-teams","text":"Each user on creation is assigned their own unique Organization as their email address.","title":"Organizations / Teams"},{"location":"features/organizations/#add-users","text":"This page creates an new admin user with a password. You can add team members to your Organization via the Organization -> Add Admins page.","title":"Add Users"},{"location":"features/organizations/#delete-users","text":"This will delete the user's account. Remove members by clicking the X on the user.","title":"Delete Users"},{"location":"features/organizations/#permissions","text":"Users are created on this page with \"Admin\" rights to your organization. Today the server allows \"anyone\" to sign up. If a user joins the server web page, they will not gain any access to Organization policies or reports. I will add user roles in a later version.","title":"Permissions"},{"location":"features/policy/","text":"Rules: # Choose section, Triggers, Greetings, Modifiers, Webhooks or Apps # Triggers Block or Permit # Starting in 0.4.1, matches support Regex, in addition to simple text. Rules are in RegEx Format: 911 (matches only 911) .* (match all) ^\\d{4}$/ (matches 4 digit calls) ^[1-9]\\d{9}$ ( Match 10 digit calls, starting with 1-9) You can block or permit the call. If you block, the Caller will hear a fast busy tone, as the call is rejected. Greetings Greeting Name and Identifier must match exactly! You can inject a callmanager greeting to any call. Upload audio to Callmanager as an Announcement, and match the exact name to the field in the CallTelemetry Rule. Modifiers You can dynamically change 4 things about the call - the calling and called number, and the calling and called name. Webhooks You can associate WebHooks to a rule to trigger real-time call data to POST to those API servers. You can customize the template sent in the WebHook setup, but not within the rule. Pressing + will associate the WebHook to the rule, and Pressing - will remove it from the rule. Apps You can associate Apps to rules to trigger services to react on real-time call data. Pressing '+' will associate the App to the rule. Pressing '-' will remove it from the rule. You must create Apps before they will show up on this page.","title":"Rule Features"},{"location":"features/policy/#rules","text":"","title":"Rules:"},{"location":"features/policy/#choose-section-triggers-greetings-modifiers-webhooks-or-apps","text":"Triggers","title":"Choose section, Triggers, Greetings, Modifiers, Webhooks or Apps"},{"location":"features/policy/#block-or-permit","text":"Starting in 0.4.1, matches support Regex, in addition to simple text. Rules are in RegEx Format: 911 (matches only 911) .* (match all) ^\\d{4}$/ (matches 4 digit calls) ^[1-9]\\d{9}$ ( Match 10 digit calls, starting with 1-9) You can block or permit the call. If you block, the Caller will hear a fast busy tone, as the call is rejected. Greetings Greeting Name and Identifier must match exactly! You can inject a callmanager greeting to any call. Upload audio to Callmanager as an Announcement, and match the exact name to the field in the CallTelemetry Rule. Modifiers You can dynamically change 4 things about the call - the calling and called number, and the calling and called name. Webhooks You can associate WebHooks to a rule to trigger real-time call data to POST to those API servers. You can customize the template sent in the WebHook setup, but not within the rule. Pressing + will associate the WebHook to the rule, and Pressing - will remove it from the rule. Apps You can associate Apps to rules to trigger services to react on real-time call data. Pressing '+' will associate the App to the rule. Pressing '-' will remove it from the rule. You must create Apps before they will show up on this page.","title":"Block or Permit"},{"location":"features/webhooks/","text":"App - Webhooks # Webhooks allow you to take realtime call data, and pass it to any API. You can add multiple headers as needed. The payload is tested with JSON endpoints. Create a WebHook App # WebHooks can be associated to any Rule within a Policy. You can use variable names like {{event.calling_name}} and others listed on the page to enrich your API request. Associate to Rule # Then from a rule you would associate it as an action","title":"App - Webhooks"},{"location":"features/webhooks/#app-webhooks","text":"Webhooks allow you to take realtime call data, and pass it to any API. You can add multiple headers as needed. The payload is tested with JSON endpoints.","title":"App - Webhooks"},{"location":"features/webhooks/#create-a-webhook-app","text":"WebHooks can be associated to any Rule within a Policy. You can use variable names like {{event.calling_name}} and others listed on the page to enrich your API request.","title":"Create a WebHook App"},{"location":"features/webhooks/#associate-to-rule","text":"Then from a rule you would associate it as an action","title":"Associate to Rule"},{"location":"setup/cdr/","text":"CDR Server # CallTelemetry runs a SFTP Server that accepts Cisco CDR formatted files, processes them, and decodes every field. CDR Events do NOT trigger rule matches (yet). 1. Obtain your CDR Credentials # 2. Enable CDR Processing # Within Callmanager Serviceability - CDR Management, add server. #","title":"Add CDR Accounting"},{"location":"setup/cdr/#cdr-server","text":"CallTelemetry runs a SFTP Server that accepts Cisco CDR formatted files, processes them, and decodes every field. CDR Events do NOT trigger rule matches (yet).","title":"CDR Server"},{"location":"setup/cdr/#1-obtain-your-cdr-credentials","text":"","title":"1. Obtain your CDR Credentials"},{"location":"setup/cdr/#2-enable-cdr-processing","text":"","title":"2. Enable CDR Processing"},{"location":"setup/cdr/#within-callmanager-serviceability-cdr-management-add-server","text":"","title":"Within Callmanager Serviceability - CDR Management, add server."},{"location":"setup/cube/","text":"Onborading Guide - CUBE Integration # How does CUBE Integration work? # We leverage the Cisco Native IOS XCC (Extended Call Control Service) API. Full documentation is available here 1. Add a CUBE in Call Telemetry # Copy and paste the config generated to your CUBE. Make sure the CUBE can resolve the address. 2. Verify it shows as registered in Call Telemetry # If everything is right first time, the CUBE will show registered.","title":"Add a CUBE"},{"location":"setup/cube/#onborading-guide-cube-integration","text":"","title":"Onborading Guide - CUBE Integration"},{"location":"setup/cube/#how-does-cube-integration-work","text":"We leverage the Cisco Native IOS XCC (Extended Call Control Service) API. Full documentation is available here","title":"How does CUBE Integration work?"},{"location":"setup/cube/#1-add-a-cube-in-call-telemetry","text":"Copy and paste the config generated to your CUBE. Make sure the CUBE can resolve the address.","title":"1. Add a CUBE in Call Telemetry"},{"location":"setup/cube/#2-verify-it-shows-as-registered-in-call-telemetry","text":"If everything is right first time, the CUBE will show registered.","title":"2. Verify it shows as registered in Call Telemetry"},{"location":"setup/curri/","text":"Onborading Guide - External Call Control / CURRI # 1. In Callmanager, Create an ECC Profile # 2. Point ECC Profile to Calltelemetry # Copy the URL from your Policies Page by clicking here. Docker will not expose the IP of the host, so in most cases you will get \"localhost\" as the hostname - replace that with the IP of the box. Make sure to include port 80 as shown. # Fill in the ECC Settings Name: Policy Name Primary Web Service: http://calltelemetryhost:80/api/etc Secondary Web Service: If you are HA clustering - http://calltelemetryVIP2:80/api/etc Enable Load Balancing: No for OVA, Yes for HA Clustered Deployment. Call Treatment on Failures: Allow 3. Verify it shows as registered in CallTelemetry # Anytime you have an ECC Profile built in Callmanager, Callmanager will reach out and try to register to the policy server. If your policy is not Registered, your rules won't work either.","title":"Add a Call Control Profile"},{"location":"setup/curri/#onborading-guide-external-call-control-curri","text":"","title":"Onborading Guide - External Call Control / CURRI"},{"location":"setup/curri/#1-in-callmanager-create-an-ecc-profile","text":"","title":"1. In Callmanager, Create an ECC Profile"},{"location":"setup/curri/#2-point-ecc-profile-to-calltelemetry","text":"Copy the URL from your Policies Page by clicking here. Docker will not expose the IP of the host, so in most cases you will get \"localhost\" as the hostname - replace that with the IP of the box.","title":"2. Point ECC Profile to Calltelemetry"},{"location":"setup/curri/#make-sure-to-include-port-80-as-shown","text":"Fill in the ECC Settings Name: Policy Name Primary Web Service: http://calltelemetryhost:80/api/etc Secondary Web Service: If you are HA clustering - http://calltelemetryVIP2:80/api/etc Enable Load Balancing: No for OVA, Yes for HA Clustered Deployment. Call Treatment on Failures: Allow","title":"Make sure to include port 80 as shown."},{"location":"setup/curri/#3-verify-it-shows-as-registered-in-calltelemetry","text":"Anytime you have an ECC Profile built in Callmanager, Callmanager will reach out and try to register to the policy server. If your policy is not Registered, your rules won't work either.","title":"3. Verify it shows as registered in CallTelemetry"},{"location":"setup/mcid/","text":"MCID (Malicious Call Identification) # MCID was released in Callmanager 4.0.1, in 2004. It's a softkey on the phone built into Callmanager. When the user is on a call, they can press \"MCID\", this will flag the call in CDR records. CallTelemetry Server will process CDR and look for the flag, and add it to the Call Policy API as a block rule. Read more about the MCID Feature from Cisco ** You must be sending CDR to CallTelemetry Server. Click here if you need that guide. Step 1. Enable the MCID Softkey # Device -> Device Settings -> Softkey Features Copy the Default Softkey to a new template Go to Softkey Configuration Go to Connected State Add MCID Softkey Apply softkey to phones, or set as Default Step 2. Demonstration of the MCID Softkey # MCID creates a rule with calling AND called number(the user submitting). A submission will never cause other user's calls to be blocked. Any user worldwide can now submit their own unique blocked call based on the calling and called event.","title":"Enable MCID for Spam Tagging"},{"location":"setup/mcid/#mcid-malicious-call-identification","text":"MCID was released in Callmanager 4.0.1, in 2004. It's a softkey on the phone built into Callmanager. When the user is on a call, they can press \"MCID\", this will flag the call in CDR records. CallTelemetry Server will process CDR and look for the flag, and add it to the Call Policy API as a block rule. Read more about the MCID Feature from Cisco ** You must be sending CDR to CallTelemetry Server. Click here if you need that guide.","title":"MCID (Malicious Call Identification)"},{"location":"setup/mcid/#step-1-enable-the-mcid-softkey","text":"Device -> Device Settings -> Softkey Features Copy the Default Softkey to a new template Go to Softkey Configuration Go to Connected State Add MCID Softkey Apply softkey to phones, or set as Default","title":"Step 1. Enable the MCID Softkey"},{"location":"setup/mcid/#step-2-demonstration-of-the-mcid-softkey","text":"MCID creates a rule with calling AND called number(the user submitting). A submission will never cause other user's calls to be blocked. Any user worldwide can now submit their own unique blocked call based on the calling and called event.","title":"Step 2. Demonstration of the MCID Softkey"},{"location":"setup/policy-assignment/","text":"Policy Deployment Guide # CURRI & \"Fail to Passthrough\" # CURRI is a stateful protocol, and no routing is done through it. It's only a policy response engine - returning continue, block, or modify. A keepalive must also be maintained. If anytime the heartbeat fails, or a bad response is given, calls revert to the \"Call Treatment on Failures\" policy in the CURRI/ECC Profile - which most customers leave as \"Allow\". There is never a single point of failure, as CUCM will fail \"open\". How CURRI works # Curri only inspects Inbound Events. Meaning, you must apply the policy to an object receiving the event for it to receive events. It could be Inbound to Phones, Inbound to a Pattern or Translation. CURRI/ECC does not inspect outbound events generated from the device applied to. Example 1 - if a phone has an CURRI/ECC Policy applied, and it dials outbound to a pattern without a policy applied - this event is not processed. Example 2 - if a phone does NOT have a policy applied, and it dials outbound to a pattern WITH a policy applied - this event is processed. Inspect Inbound Calls Only # Some customers only inspect inbound calls coming from CUBEs, Gateways, into CUCM. This reduces the processing of the Policy API, and provides inbound call protection. Inspect calls on Phones # You can apply ECC profiles to a single phone. All calls received on that phone will be inspected. Or if you want to inspect more phones, you can use Bulk Tools like BAT for large applications. Inspect calls on Route Patterns # You can apply a policy on outbound patterns to inspect outbound calls,like 911 patterns, or Outbound Route Patterns for compliance reasons, or alerting. Example for a phone # Example for a Route / Translation Pattern #","title":"Policy Deployment Guide"},{"location":"setup/policy-assignment/#policy-deployment-guide","text":"","title":"Policy Deployment Guide"},{"location":"setup/policy-assignment/#curri-fail-to-passthrough","text":"CURRI is a stateful protocol, and no routing is done through it. It's only a policy response engine - returning continue, block, or modify. A keepalive must also be maintained. If anytime the heartbeat fails, or a bad response is given, calls revert to the \"Call Treatment on Failures\" policy in the CURRI/ECC Profile - which most customers leave as \"Allow\". There is never a single point of failure, as CUCM will fail \"open\".","title":"CURRI &amp; \"Fail to Passthrough\""},{"location":"setup/policy-assignment/#how-curri-works","text":"Curri only inspects Inbound Events. Meaning, you must apply the policy to an object receiving the event for it to receive events. It could be Inbound to Phones, Inbound to a Pattern or Translation. CURRI/ECC does not inspect outbound events generated from the device applied to. Example 1 - if a phone has an CURRI/ECC Policy applied, and it dials outbound to a pattern without a policy applied - this event is not processed. Example 2 - if a phone does NOT have a policy applied, and it dials outbound to a pattern WITH a policy applied - this event is processed.","title":"How CURRI works"},{"location":"setup/policy-assignment/#inspect-inbound-calls-only","text":"Some customers only inspect inbound calls coming from CUBEs, Gateways, into CUCM. This reduces the processing of the Policy API, and provides inbound call protection.","title":"Inspect Inbound Calls Only"},{"location":"setup/policy-assignment/#inspect-calls-on-phones","text":"You can apply ECC profiles to a single phone. All calls received on that phone will be inspected. Or if you want to inspect more phones, you can use Bulk Tools like BAT for large applications.","title":"Inspect calls on Phones"},{"location":"setup/policy-assignment/#inspect-calls-on-route-patterns","text":"You can apply a policy on outbound patterns to inspect outbound calls,like 911 patterns, or Outbound Route Patterns for compliance reasons, or alerting.","title":"Inspect calls on Route Patterns"},{"location":"setup/policy-assignment/#example-for-a-phone","text":"","title":"Example for a phone"},{"location":"setup/policy-assignment/#example-for-a-route-translation-pattern","text":"","title":"Example for a Route / Translation Pattern"},{"location":"setup/policy-flow/","text":"Policy Flow # 0.4.1 introduces compliance rules as a priority. Here is the order of processing.","title":"Policy Flow"},{"location":"setup/policy-flow/#policy-flow","text":"0.4.1 introduces compliance rules as a priority. Here is the order of processing.","title":"Policy Flow"},{"location":"troubleshooting/cdr/","text":"Troubleshooting CDR # Restart the Csico CDR Agent in Cisco CUCM Servicability - Tools -> Control Center Network Services. I've found in lab testing, that it often gets stuck on CDR Server changes. Check the logs. On Docker you can SSH to the box with centos/centos. cd calltelemetry docker-compose logs A successful CDR Upload will look like this. [info] SFTP: Authenticating User [info] SFTP: Authenticating User/Pass [info] SFTP: File uploaded by 7REI4Y //7REI4Y/cdr_StandAloneCluster_01_202012021653_823 [info] CDR: Found CDR Integration for CDR user 7REI4Y [info] CDR: Parsing CDR for user 7REI4Y [info] CDR: Parsing file. [info] CDR: Looking for MCID [info] CDR: Inserting call. Org Name: Your Org [info] CDR: Updating Last Seen [info] CDR Integration - Last Seen Changeset [info] CDR: Deleting file /7REI4Y/cdr_StandAloneCluster_01_202012021630_817 If you get logs otherwise, send them to me in Webex Teams Space.","title":"CDR"},{"location":"troubleshooting/cdr/#troubleshooting-cdr","text":"Restart the Csico CDR Agent in Cisco CUCM Servicability - Tools -> Control Center Network Services. I've found in lab testing, that it often gets stuck on CDR Server changes. Check the logs. On Docker you can SSH to the box with centos/centos. cd calltelemetry docker-compose logs A successful CDR Upload will look like this. [info] SFTP: Authenticating User [info] SFTP: Authenticating User/Pass [info] SFTP: File uploaded by 7REI4Y //7REI4Y/cdr_StandAloneCluster_01_202012021653_823 [info] CDR: Found CDR Integration for CDR user 7REI4Y [info] CDR: Parsing CDR for user 7REI4Y [info] CDR: Parsing file. [info] CDR: Looking for MCID [info] CDR: Inserting call. Org Name: Your Org [info] CDR: Updating Last Seen [info] CDR Integration - Last Seen Changeset [info] CDR: Deleting file /7REI4Y/cdr_StandAloneCluster_01_202012021630_817 If you get logs otherwise, send them to me in Webex Teams Space.","title":"Troubleshooting CDR"},{"location":"troubleshooting/curri/","text":"Troubleshooting CURRI / ECC / Policies # Check the logs. On Docker you can SSH to the box with centos/centos. cd calltelemetry sudo docker-compose logs A successful CDR Upload will look like this. If you get logs otherwise, send them to me in Webex Teams Space.","title":"Troubleshooting CURRI / ECC / Policies"},{"location":"troubleshooting/curri/#troubleshooting-curri-ecc-policies","text":"Check the logs. On Docker you can SSH to the box with centos/centos. cd calltelemetry sudo docker-compose logs A successful CDR Upload will look like this. If you get logs otherwise, send them to me in Webex Teams Space.","title":"Troubleshooting CURRI / ECC / Policies"},{"location":"troubleshooting/logs/","text":"OVA Troubleshooting # Connecting to the OVA - SSH port 2222 # On the OVA Docker Appliance you can SSH to the box on port 2222. (Port 22 is SFTP/CDR) To view appliance Logs, run the following # cd calltelemetry docker-compose logs If you have trouble, sending the last page of logs would be most helpful.","title":"Logs"},{"location":"troubleshooting/logs/#ova-troubleshooting","text":"","title":"OVA Troubleshooting"},{"location":"troubleshooting/logs/#connecting-to-the-ova-ssh-port-2222","text":"On the OVA Docker Appliance you can SSH to the box on port 2222. (Port 22 is SFTP/CDR)","title":"Connecting to the OVA - SSH port 2222"},{"location":"troubleshooting/logs/#to-view-appliance-logs-run-the-following","text":"cd calltelemetry docker-compose logs If you have trouble, sending the last page of logs would be most helpful.","title":"To view appliance Logs, run the following"}]}